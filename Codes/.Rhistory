a=
describe(dataset[c(2,3,5,6,8,9)])
describe(dataset[c(2,3,5,6,8,9)])
b = c(2,5)
x11()
{
x11()
boxplot(dataset[,-1])
cor.plot(dataset[,b])
dataset$'Shock Event Ger' <- as.factor(dataset$'Shock Event Ger')
}
dataset1 <- ts(dataset, start = c(1971,1), end = (2020))
g_cpi <- dataset1[,2]
g_u <- dataset1[,5]
shockg <- dataset1[,8]
u<-data.frame(value=g_u, YEAR=1971:2020)
cpi<-data.frame(value=g_cpi, YEAR=1971:2020)
{
x11()
p = ggplot(u) +
geom_line(aes(x=as.numeric(YEAR),y=as.numeric(value),col="Unemployment")) +
geom_line(data=cpi, aes(x=as.numeric(YEAR),y=as.numeric(value),col="Inflation")) +
labs(title = "Time Series") +
xlab("year") +  ylab("") +
theme(plot.title = element_text(hjust = 0.5)) +
scale_color_manual(values = c("blue", "red"), guide = guide_legend(title = "Data"))
print(p)
}
library(aTSA)
adf.test(as.matrix(g_cpi))
adf.test(as.matrix(g_u))
dg_u <- diff(g_u)
dg_cpi <- diff(g_cpi)
adf.test(as.matrix(dg_cpi))
adf.test(as.matrix(dg_u))
kpss.test(as.matrix(g_cpi))
kpss.test(as.matrix(g_u))
kpss.test(as.matrix(dg_cpi))
kpss.test(as.matrix(dg_u))
library(vars)
y <- cbind(dg_u, dg_cpi ) #matrix
colnames(y) <- c("d.g_u","d.g_cpi")
y <- na.trim(y)
library(urca)
y.CA <- ca.jo(cbind(dg_u, dg_cpi), type="trace", K=6, ecdet = c("none", "const", "trend"), spec=c("longrun", "transitory"))
summary(y.CA)
y.CA <- ca.jo(y, type="eigen", K=6)
summary(y.CA)
library(aTSA)
coint.test(as.matrix(dg_u), as.matrix(dg_cpi) ,d = 0, nlag = 6, output = TRUE)
y.VEC <- cajorls(y.CA)
summary(y.VEC$rlm)
g_u_1 <- lag(g_u, -1, na.pad = TRUE) #last term the last part of vector is delete
g_cpi_1 <- lag(g_cpi, -1, na.pad = TRUE)
################################################################################
##### GERMANY: LONG RUN (INFLATION) ############################################
################################################################################
source("Germany_long_inflation.R")
g_u_1 <- lag(g_u, -1, na.pad = TRUE) #last term the last part of vector is delete
g_cpi_1 <- lag(g_cpi, -1, na.pad = TRUE)
gfitLR <- dynlm(g_cpi ~  g_u + g_u_1)
summary(gfitLR)
ARgfitLR <- dynlm(g_cpi ~  g_u + g_cpi_1)
summary(ARgfitLR)
ARMAgfitLR <- dynlm(g_cpi ~  g_u + g_cpi_1 + g_u_1)
summary(ARMAgfitLR)
g_cpi_2 <- lag(g_cpi, -2, na.pad = TRUE)
g_u_2 <- lag(g_u, -2, na.pad = TRUE)
ARMA2gfitLR <- dynlm(g_cpi ~  g_u + g_cpi_1 + g_u_1 + g_u_2 + g_cpi_2)
summary(ARMA2gfitLR)
ARMA21gfitLR <- dynlm(g_cpi ~  g_u + g_cpi_1 + g_u_1 + g_cpi_2)
summary(ARMA21gfitLR)
AR2gfitLR <- dynlm(g_cpi ~  g_u + g_cpi_1 + g_cpi_2)
summary(AR2gfitLR)
AIC(gfitLR, ARgfitLR, ARMAgfitLR, ARMA2gfitLR, ARMA21gfitLR, AR2gfitLR)
gfitLR
ARgfitLR
ARMAgfitLR
ARMA2gfitLR
ARMA21gfitLR
AR2gfitLR
AIC(gfitLR, ARgfitLR, ARMAgfitLR, ARMA2gfitLR)
gfitLR
ARgfitLR
ARMAgfitLR
ARMA2gfitLR
AIC(gfitLR, ARgfitLR, ARMAgfitLR)
AIC(ARMA2gfitLR, ARMA21gfitLR, AR2gfitLR)
BIC(gfitLR, ARgfitLR, ARMAgfitLR, ARMA2gfitLR, ARMA21gfitLR, AR2gfitLR)
BIC(gfitLR, ARgfitLR, ARMAgfitLR)
BIC(ARMA2gfitLR, ARMA21gfitLR, AR2gfitLR)
bptest(AR2gfitLR, studentize = FALSE)
archTestLRg_cpi <- ArchTest(AR2gfitLR$residuals, lags = 2, demean = FALSE)
archTestLRg_cpi
resettest(g_cpi ~  g_u + g_cpi_1 + g_cpi_2)
wald.test(Sigma = vcov(AR2gfitLR), b = coef(AR2gfitLR), Terms = 2:4)
library(lmtest)
grangertest(g_cpi, g_u, order = 2) # inflation -> unemployment
grangertest(g_u, g_cpi, order = 2) # unemployent -> inflation
dwtest(AR2gfitLR)
Box.test(AR2gfitLR$residuals, type = "Ljung-Box", lag = 6)
Box.test(AR2gfitLR$residuals, type = "Box-Pierce", lag = 6)
x11()
{
x11()
acf(AR2gfitLR$residuals)
}
gufitLR <- dynlm(g_u ~  g_cpi + g_cpi_1)
summary(gufitLR)
ARgufitLR <- dynlm(g_u ~  g_cpi + g_u_1)
summary(ARgufitLR)
ARMAgufitLR <- dynlm(g_u ~  g_cpi + g_u_1 + g_cpi_1)
summary(ARMAgufitLR)
ARMA2gufitLR <- dynlm(g_u ~  g_cpi + g_u_1 + g_cpi_1 + g_u_2 + g_cpi_2)
summary(ARMA2gufitLR)
ARMA21gufitLR <- dynlm(g_u ~  g_cpi + g_u_1 + g_cpi_1 + g_u_2 )
summary(ARMA21gufitLR)
ARMA12gufitLR <- dynlm(g_u ~  g_cpi + g_u_1 + g_cpi_1 + g_cpi_2 )
summary(ARMA12gufitLR)
AR2gufitLR <- dynlm(g_u ~  g_cpi + g_cpi_1 + g_cpi_2 )
summary(ARMA12gufitLR)
AIC(gufitLR, ARgufitLR, ARMAgufitLR, ARMA2gufitLR, ARMA21gufitLR, ARMA12gufitLR, AR2gufitLR)
ARMA2gufitLR
AIC(gufitLR, ARgufitLR, ARMAgufitLR)
AIC(ARMA2gufitLR, ARMA21gufitLR, ARMA12gufitLR, AR2gufitLR)
BIC(gufitLR, ARgufitLR, ARMAgufitLR)
BIC(ARMA2gufitLR, ARMA21gufitLR, ARMA12gufitLR, AR2gufitLR)
bptest(ARMA21gufitLR, studentize = FALSE)
archTestLRg_u <- ArchTest(ARMA21gufitLR$residuals, lags = 2, demean = FALSE)
archTestLRg_u
resettest(g_u ~  g_cpi + g_u_1 + g_cpi_1 + g_u_2)
wald.test(Sigma = vcov(ARMA21gufitLR), b = coef(ARMA21gufitLR), Terms = 2:5)
dwtest(ARMA21gufitLR)
Box.test(ARMA21gufitLR$residuals, type = "Ljung-Box", lag = 6)
Box.test(ARMA21gufitLR$residuals, type = "Box-Pierce", lag = 6)
{
x11()
acf(ARMA21gufitLR$residuals)
}
{
gufitSR <- dynlm(dg_u ~  dg_cpi + dg_cpi_1)
summary(gufitSR)
}
dg_cpi_1 <- lag(dg_cpi, -1, na.pad = TRUE)
dg_u_1 <- lag(dg_u, -1, na.pad = TRUE)
{
gufitSR <- dynlm(dg_u ~  dg_cpi + dg_cpi_1)
summary(gufitSR)
}
{
ARgufitSR <- dynlm(dg_u ~  dg_cpi + dg_u_1)
summary(ARgufitSR)
}
{
ARMAgufitSR <- dynlm(dg_u ~  dg_cpi + dg_u_1 + dg_cpi_1)
summary(ARMAgufitSR)
}
{
ARMA2gufitSR <- dynlm(dg_u ~  dg_cpi + dg_u_1 + dg_cpi_1 + dg_u_2 + dg_cpi_2)
summary(ARMA2gufitSR)
}
{
ARMA21gufitSR <- dynlm(dg_u ~  dg_cpi + dg_u_1 + dg_cpi_1 + dg_u_2)
summary(ARMA21gufitSR)
}
{
AR2gufitSR <- dynlm(dg_u ~  dg_cpi + dg_u_1 + dg_u_2)
summary(AR2gufitSR)
}
AIC(gufitSR, ARgufitSR, ARMAgufitSR, ARMA2gufitSR, ARMA21gufitSR, AR2gufitSR)
g_cpi_2 <- lag(g_cpi, -2, na.pad = TRUE)
g_u_2 <- lag(g_u, -2, na.pad = TRUE)
{
ARMA2gufitSR <- dynlm(dg_u ~  dg_cpi + dg_u_1 + dg_cpi_1 + dg_u_2 + dg_cpi_2)
summary(ARMA2gufitSR)
}
dg_cpi_1 <- lag(dg_cpi, -1, na.pad = TRUE)
dg_u_1 <- lag(dg_u, -1, na.pad = TRUE)
gfitSR <- dynlm(dg_cpi ~  dg_u + dg_u_1)
summary(gfitSR)
ARgfitSR <- dynlm(dg_cpi ~  dg_u + dg_cpi_1)
summary(ARgfitSR)
ARMAgfitSR <- dynlm(dg_cpi ~  dg_u + dg_cpi_1 + dg_u_1)
summary(ARMAgfitSR)
dg_cpi_2 <- lag(dg_cpi, -2, na.pad = TRUE)
dg_u_2 <- lag(dg_u, -2, na.pad = TRUE)
ARMA2gfitSR <- dynlm(dg_cpi ~  dg_u + dg_cpi_1 + dg_u_1+ dg_cpi_2 + dg_u_2)
summary(ARMA2gfitSR)
ARMA21gfitSR <- dynlm(dg_cpi ~  dg_u + dg_cpi_1 + dg_u_1+ dg_cpi_2)
summary(ARMA21gfitSR)
AR2gfitSR <- dynlm(dg_cpi ~  dg_u + dg_cpi_1 + dg_cpi_2)
summary(AR2gfitSR)
AIC(gfitSR, ARgfitSR, ARMAgfitSR, ARMA2gfitSR, ARMA21gfitSR, AR2gfitSR)
AIC(gfitSR, ARgfitSR, ARMAgfitSR)
AIC(ARMA2gfitSR, ARMA21gfitSR, AR2gfitSR)
BIC(gfitSR, ARgfitSR, ARMAgfitSR)
BIC(ARMA2gfitSR, ARMA21gfitSR, AR2gfitSR)
bptest(AR2gfitSR, studentize = FALSE)
archTestSRdg_cpi <- ArchTest(AR2gfitSR$residuals, lags = 2, demean = FALSE)
archTestSRdg_cpi
resettest(dg_cpi ~  dg_u + dg_cpi_1 + dg_cpi_2)
wald.test(Sigma = vcov(AR2gfitSR), b = coef(AR2gfitSR), Terms = 2:4)
dwtest(AR2gfitSR)
Box.test(AR2gfitSR$residuals, type = "Ljung-Box", lag = 6)
Box.test(AR2gfitSR$residuals, type = "Box-Pierce", lag = 6)
{
x11()
acf(AR2gfitSR$residuals)
}
{
gufitSR <- dynlm(dg_u ~  dg_cpi + dg_cpi_1)
summary(gufitSR)
}
{
ARgufitSR <- dynlm(dg_u ~  dg_cpi + dg_u_1)
summary(ARgufitSR)
}
{
ARMAgufitSR <- dynlm(dg_u ~  dg_cpi + dg_u_1 + dg_cpi_1)
summary(ARMAgufitSR)
}
{
ARMA2gufitSR <- dynlm(dg_u ~  dg_cpi + dg_u_1 + dg_cpi_1 + dg_u_2 + dg_cpi_2)
summary(ARMA2gufitSR)
}
{
ARMA21gufitSR <- dynlm(dg_u ~  dg_cpi + dg_u_1 + dg_cpi_1 + dg_u_2)
summary(ARMA21gufitSR)
}
{
AR2gufitSR <- dynlm(dg_u ~  dg_cpi + dg_u_1 + dg_u_2)
summary(AR2gufitSR)
}
AIC(gufitSR, ARgufitSR, ARMAgufitSR)
AIC(ARMA2gufitSR, ARMA21gufitSR, AR2gufitSR)
BIC(gufitSR, ARgufitSR, ARMAgufitSR)
BIC(ARMA2gufitSR, ARMA21gufitSR, AR2gufitSR)
bptest(ARMAgufitSR, studentize = FALSE)
archTestSRdg_u <- ArchTest(ARMAgufitSR$residuals, lags = 1, demean = FALSE)
archTestSRdg_u
resettest(dg_u ~  dg_cpi + dg_cpi_1 + dg_u_1)
wald.test(Sigma = vcov(ARMAgufitSR), b = coef(ARMAgufitSR), Terms = 2:4)
dwtest(ARMAgufitSR)
Box.test(ARMAgufitSR$residuals, type = "Ljung-Box", lag = 6)
Box.test(ARMAgufitSR$residuals, type = "Box-Pierce", lag = 6)
################################################################################
##### USA: DUMMY ###############################################################
################################################################################
source("USA_dummy.R")
#### MOVING AVERAGE (1) MODEL #################################################
################################################################################
{
usaufitLR <- dynlm(usa_u ~  usa_cpi + usa_cpi_1)
summary(usaufitLR)
}
################################################################################
##### AUTOREGRESSIVE (1) MODEL #################################################
################################################################################
{
ARusaufitLR <- dynlm(usa_u ~  usa_cpi + usa_u_1)
summary(ARusaufitLR)
}
################################################################################
##### AUTOREGRESSIVE MOVING AVERAGE (1,1) MODEL ################################
################################################################################
{
ARMAusaufitLR <- dynlm(usa_u ~  usa_cpi + usa_u_1 + usa_cpi_1)
summary(ARMAusaufitLR)
}
################################################################################
##### AUTOREGRESSIVE MOVING AVERAGE (2,2) MODEL ################################
################################################################################
{
ARMA2usaufitLR <- dynlm(usa_u ~  usa_cpi + usa_u_1 + usa_cpi_1 + usa_u_2 + usa_cpi_2)
summary(ARMA2usaufitLR)
}
################################################################################
##### AUTOREGRESSIVE MOVING AVERAGE (2,1) MODEL ################################
################################################################################
{
ARMA21usaufitLR <- dynlm(usa_u ~  usa_cpi + usa_u_1 + usa_cpi_1 + usa_u_2 )
summary(ARMA21usaufitLR)
}
################################################################################
##### AUTOREGRESSIVE MOVING AVERAGE (1,2) MODEL ################################
################################################################################
{
ARMA12usaufitLR <- dynlm(usa_u ~  usa_cpi + usa_u_1 + usa_cpi_1 + usa_cpi_2 )
summary(ARMA12usaufitLR)
}
################################################################################
##### AUTOREGRESSIVE (2) MODEL #################################################
################################################################################
{
AR2usaufitLR <- dynlm(usa_u ~  usa_cpi + usa_u_1 + usa_u_2)
summary(AR2usaufitLR)
}
dusa_cpi_1 <- lag(dusa_cpi, -1, na.pad = TRUE)
dusa_u_1 <- lag(dusa_u, -1, na.pad = TRUE)
################################################################################
##### MOVING AVERAGE (1) MODEL #################################################
################################################################################
{
usafitSR <- dynlm(dusa_cpi ~  dusa_u + dusa_u_1)
summary(usafitSR)
}
################################################################################
##### AUTOREGRESSIVE (1) MODEL #################################################
################################################################################
{
ARusafitSR <- dynlm(dusa_cpi ~  dusa_u + dusa_cpi_1)
summary(ARusafitSR)
}
################################################################################
##### AUTOREGRESSIVE MOVING AVERAGE (1,1) MODEL ################################
################################################################################
{
ARMAusafitSR <- dynlm(dusa_cpi ~  dusa_u + dusa_cpi_1 + dusa_u_1)
summary(ARMAusafitSR)
}
################################################################################
##### AUTOREGRESSIVE MOVING AVERAGE (2,2) MODEL ################################
################################################################################
dusa_cpi_2 <- lag(dusa_cpi, -2, na.pad = TRUE)
dusa_u_2 <- lag(dusa_u, -2, na.pad = TRUE)
{
ARMA2usafitSR <- dynlm(dusa_cpi ~  dusa_u + dusa_cpi_1 + dusa_u_1+ dusa_cpi_2 + dusa_u_2)
summary(ARMA2usafitSR)
}
################################################################################
##### AUTOREGRESSIVE MOVING AVERAGE (2,1) MODEL ################################
################################################################################
{
ARMA21usafitSR <- dynlm(dusa_cpi ~  dusa_u + dusa_cpi_1 + dusa_u_1+ dusa_cpi_2)
summary(ARMA21usafitSR)
}
################################################################################
##### AUTOREGRESSIVE MOVING AVERAGE (1,2) MODEL ################################
################################################################################
{
ARMA12usafitSR <- dynlm(dusa_cpi ~  dusa_u + dusa_cpi_1 + dusa_u_1+ dusa_u_2)
summary(ARMA12usafitSR)
}
################################################################################
##### AUTOREGRESSIVE (2) MODEL #################################################
################################################################################
{
AR2usafitSR <- dynlm(dusa_cpi ~  dusa_u + dusa_cpi_1 + dusa_cpi_2)
summary(AR2usafitSR)
}
################################################################################
##### AUTOREGRESSIVE (3) MODEL #################################################
################################################################################
dusa_cpi_3 <- lag(dusa_cpi, -3, na.pad = TRUE)
dusa_u_3 <- lag(dusa_u, -3, na.pad = TRUE)
{
AR3usafitSR <- dynlm(dusa_cpi ~  dusa_u + dusa_cpi_1 + dusa_cpi_2+ dusa_cpi_3)
summary(AR3usafitSR)
}
library(lmtest)
library(dynlm)
library(orcutt)
library(sandwich)
library(car)
library(nlWaldTest)
library(forecast)
library(xts)
library(readxl)
library(ggplot2)
library(foreign) #Or you can use require(foreign)
library(xts)
library(ggplot2)
library(pastecs)
require(psych)
library(MASS)
library(ggplot2)
library(aTSA)
library(vars)
library(tidyverse)
library(car)
library(stargazer)
library(plm)
library(ecm)
library(panelr)
library(aod)
dataset <- read_excel("Inflation-Unemployment.xlsx")
################################################################################
##### INITIAL STATISTICAL ANALYSIS #############################################
################################################################################
describe(dataset[,-1])
b = c(2,3,5,6)
x11()
boxplot(dataset[,-1])
cor.plot(dataset[,b])
dataset$`Shock Event USA` <- as.factor(dataset$`Shock Event USA`)
################################################################################
##### TIME SERIES CONSTRUCTION #################################################
################################################################################
dataset1 <- ts(dataset, start = c(1971,1), end = (2020))
usa_cpi <- dataset1[,3]
usa_u <- dataset1[,6]
shockusa <- dataset1[,9]
u<-data.frame(value=usa_u, YEAR=1971:2020)
cpi<-data.frame(value=usa_cpi, YEAR=1971:2020)
{
x11()
p = ggplot(u) +
geom_line(aes(x=as.numeric(YEAR),y=as.numeric(value),col="Unemployment")) +
geom_line(data=cpi, aes(x=as.numeric(YEAR),y=as.numeric(value),col="Inflation")) +
labs(title = "Time Series") +
xlab("year") +  ylab("") +
theme(plot.title = element_text(hjust = 0.5)) +
scale_color_manual(values = c("blue", "red"), guide = guide_legend(title = "Data"))
print(p)
}
library(urca)
dusa_cpi <- diff(usa_cpi)
dusa_u <- diff(usa_u)
d2usa_cpi <- diff(usa_cpi, differences = 2)
d2usa_u <- diff(usa_u, differences = 2)
################################################################################
##### STATIONARITY TEST: AUGMENTED DICKEY FULLER ###############################
################################################################################
# Augmented Dickey Fuller
# H0: non stationary
# H1: stationary
library(aTSA)
adf.test(as.matrix(usa_cpi))
adf.test(as.matrix(usa_u))
adf.test(as.matrix(dusa_cpi))
adf.test(as.matrix(dusa_u))
################################################################################
##### STATIONARITY TEST: KPSS ##################################################
################################################################################
#KPSS->
#           H0: stationary, H1: non-stationary
#When we have a non stationary process we use the difference
kpss.test(as.matrix(usa_cpi))
kpss.test(as.matrix(usa_u))
kpss.test(as.matrix(dusa_cpi))
kpss.test(as.matrix(dusa_u))
################################################################################
##### PLOT DIFFERENCES ON TIMES SERIES #########################################
################################################################################
u<-data.frame(value=dusa_u, YEAR=1972:2020)
cpi<-data.frame(value=dusa_cpi, YEAR=1972:2020)
{
x11()
p = ggplot(u) +
geom_line(aes(x=as.numeric(YEAR),y=as.numeric(value),col="Unemployment")) +
geom_line(data=cpi, aes(x=as.numeric(YEAR),y=as.numeric(value),col="Inflation")) +
labs(title = "Difference on Time Series") +
xlab("year") +  ylab("") +
theme(plot.title = element_text(hjust = 0.5)) +
scale_color_manual(values = c("blue", "red"), guide = guide_legend(title = "Data"))
print(p)
}
################################################################################
##### SELECT VARIABLES #########################################################
################################################################################
library(vars)
y <- cbind(dusa_u, dusa_cpi ) #matrix
colnames(y) <- c("d.usa_u","d.usa_cpi")
y <- na.trim(y)
#VAR -> y(t) + A(1) * y(t-1) + ... + A(p) * y(t-p) + eps(t)    eps ~ N(o, sigma)
#VEC -> delta(y(t)) = mu + beta(1) * delta(y(t-1)) + ... beta(p) * delta(y(t-p)) + eps(t)
################################################################################
##### COINTEGRATION TEST: JOHANSEN TEST ########################################
################################################################################
#JOHANSEN->
#           trace H0: tao = tao* < k, H1: tao = k
#           eigenvalue: tao = tao* <k
#           tao = tao *
library(urca)
y.CA <- ca.jo(cbind(dusa_u, dusa_cpi), type="trace", K=5, ecdet = c("none", "const", "trend"), spec=c("longrun", "transitory"))
summary(y.CA)
# We choose nlags such that:
# 21.92 > 15.66 --> we reject r=0
# 6.14 < 6.50 --> we accept r=1
y.CA <- ca.jo(y, type="eigen", K=5)
summary(y.CA)
################################################################################
##### ALTERNATIVE TEST: ENGLE-GRANGER TEST #####################################
################################################################################
library(aTSA)
coint.test(as.matrix(dusa_u), as.matrix(dusa_cpi) ,d = 0, nlag = 5, output = TRUE)
# H0: no cointegration
################################################################################
##### ESTIMATE VEC MODEL #######################################################
################################################################################
y.VEC <- cajorls(y.CA)
summary(y.VEC$rlm)
################################################################################
##### USA: LONG RUN (INFLATION) ################################################
################################################################################
source("USA_long_inflation.R")
################################################################################
##### USA: LONG RUN (UNEMPLOYMENT) #############################################
################################################################################
source("USA_long_unemployment.R")
################################################################################
##### USA: SHORT RUN (INFLATION) ###############################################
################################################################################
source("USA_short_inflation.R")
################################################################################
##### USA: SHORT RUN (UNEMPLOYMENT) ############################################
################################################################################
source("USA_short_unemployment.R")
################################################################################
##### USA: DUMMY ###############################################################
################################################################################
source("USA_dummy.R")
